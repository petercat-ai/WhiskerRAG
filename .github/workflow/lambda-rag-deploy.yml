# .github/workflow/lambda-rag-deploy.yml
name: Deploy Lambda RAG to ECR

on:
  push:
    paths:
      - 'lambda/rag_task/**'
      - 'docker/lambda-rag.Dockerfile'

env:
  AWS_REGION: ap-northeast-1  # 替换为你的 AWS 区域
  ECR_REPOSITORY: whisker-rag  # 替换为你的 ECR 仓库名称
  DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}  # 动态获取默认分支名称

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

       - name: Set image tag
        id: set-tag
        run: |
          if [ "${{ github.ref }}" = "refs/heads/${{env.DEFAULT_BRANCH}}" ]; then
            echo "IMAGE_TAG=latest" >> $GITHUB_ENV
            echo "ECR_REPOSITORY=${{ env.ECR_REPOSITORY }}" >> $GITHUB_ENV
          else
            BRANCH_NAME=$(echo ${{ github.ref }} | sed 's/refs\/heads\///' | sed 's/\//-/g')
            echo "IMAGE_TAG=preview-${BRANCH_NAME}" >> $GITHUB_ENV
            echo "ECR_REPOSITORY=${{ env.ECR_REPOSITORY }}-preview" >> $GITHUB_ENV
          fi

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/lambda-rag.Dockerfile
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

      # - name: Update Lambda Function
      #   if: github.ref == "refs/heads/${{env.DEFAULT_BRANCH}}"
      #   run: |
      #     aws lambda update-function-code \
      #       --function-name ${{ env.RAG_FUNCTION_NAME}} \  # Replace 'your-lambda-function-name' with the actual Lambda function name
      #       --image-uri ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
