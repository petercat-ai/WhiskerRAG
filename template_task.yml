AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Task Function with SQS Integration

Globals:
  Function:
    Timeout: 300

Parameters:
  s3TempBucketName:
    Type: String
    Description: Environment marker for S3_TEMP_BUCKET_NAME
    Default: "1"

  openAIKey:
    Type: String
    Description: Environment marker for OPENAI_API_KEY
    Default: "1"

  supabaseServiceKey:
    Type: String
    Description: Environment marker for SUPABASE_SERVICE_KEY
    Default: "1"

  supabaseUrl:
    Type: String
    Description: Environment marker for SUPABASE_URL
    Default: "1"

  chunkTableName:
    Type: String
    Description: Environment marker for CHUNK_TABLE_NAME
    Default: "chunk"

  taskTableName:
    Type: String
    Description: Environment marker for TASK_TABLE_NAME
    Default: "task"

Resources:
  InputQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub '${AWS::StackName}-input-queue'
      VisibilityTimeout: 300
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt InputDLQ.Arn
        maxReceiveCount: 3

  InputDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub '${AWS::StackName}-input-dlq'

  InputQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref InputQueue
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: "*"
            Action: 'sqs:SendMessage'
            Resource: !GetAtt InputQueue.Arn

  TaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      MemorySize: 512
      FunctionUrlConfig:
        AuthType: NONE
      Environment:
        Variables:
          AWS_ACCOUNT_ID: !Ref AWS::AccountId
          S3_TEMP_BUCKET_NAME: !Ref s3TempBucketName
          OPENAI_API_KEY: !Ref openAIKey
          SUPABASE_SERVICE_KEY: !Ref supabaseServiceKey
          SUPABASE_URL: !Ref supabaseUrl
          CHUNK_TABLE_NAME: !Ref chunkTableName
          TASK_TABLE_NAME: !Ref taskTableName
          INPUT_DLQ_URL: !Ref InputDLQ
      Events:
        SQSTrigger:
          Type: SQS
          Properties:
            Queue: !GetAtt InputQueue.Arn
            BatchSize: 5          # 5 messages at a time
            MaximumBatchingWindow: 5  # max wait time for batch is 5 seconds
            ScalingConfig:
              MaximumConcurrency: 1    # max 1 concurrent invocations
      Policies:
        - Statement:
            - Sid: BedrockInvokePolicy
              Effect: Allow
              Action:
                - bedrock:InvokeModelWithResponseStream
              Resource: '*'
            - Sid: SQSPolicy
              Effect: Allow
              Action:
                - sqs:SendMessage
                - sqs:ReceiveMessage
                - sqs:DeleteMessage
                - sqs:GetQueueAttributes
              Resource: 
                - !GetAtt InputQueue.Arn
            - Sid: AllObjectActions
              Effect: Allow
              Action:
                - s3:PutObject
                - s3:GetObject
                - s3:DeleteObject
              Resource:
                - !Sub 'arn:aws:s3:::${s3TempBucketName}/*'
      Tracing: Active
    Metadata:
      DockerContext: lambda_task_subscriber
      Dockerfile: ../docker/Dockerfile.aws.task
      DockerTag: v1

Outputs:
  TaskFunctionUrl:
    Description: "Function URL for SQS Subscriptio function"
    Value: !GetAtt TaskFunctionUrl.FunctionUrl
  TaskFunction:
    Description: "SQS Subscription Function Lambda Function ARN"
    Value: !GetAtt TaskFunction.Arn
  InputQueueUrl:
    Description: "URL of the Input SQS Queue"
    Value: !Ref InputQueue
  InputQueueArn:
    Description: "ARN of the Input SQS Queue"
    Value: !GetAtt InputQueue.Arn
