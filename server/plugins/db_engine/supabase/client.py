import json
from typing import List, TypeVar

from fastapi import HTTPException, status
from pydantic import BaseModel
from supabase.client import Client, create_client
from whiskerrag_types.interface import DBPluginInterface
from whiskerrag_types.model import (
    Chunk,
    Knowledge,
    PageParams,
    PageResponse,
    RetrievalByKnowledgeRequest,
    RetrievalBySpaceRequest,
    RetrievalChunk,
    Task,
    Tenant,
)
from whiskerrag_utils import RegisterTypeEnum, get_register

T = TypeVar("T", bound=BaseModel)


class SupaBasePlugin(DBPluginInterface):
    supabase_client: Client

    def _check_table_exists(self, client: Client, table_name: str) -> bool:
        try:
            response = client.table(table_name).select("*").limit(0).execute()
            if response.data is not None:
                self.logger.info(f"table '{table_name}' connect success")
                return True
            return False
        except Exception as e:
            self.logger.info(f"check table {table_name} error: {e}")
            return False

    def get_db_client(self) -> Client:
        return self.supabase_client

    def init(self) -> None:
        SUPABASE_URL = self.settings.get_env("SUPABASE_URL", "")
        SUPABASE_SERVICE_KEY = self.settings.get_env("SUPABASE_SERVICE_KEY", "")
        if not SUPABASE_URL or not SUPABASE_SERVICE_KEY:
            raise Exception("SUPABASE_URL and SUPABASE_SERVICE_KEY are required")
        supabase: Client = create_client(SUPABASE_URL, SUPABASE_SERVICE_KEY)
        self.supabase_client = supabase
        for table_name in [
            self.settings.KNOWLEDGE_TABLE_NAME,
            self.settings.TASK_TABLE_NAME,
            self.settings.ACTION_TABLE_NAME,
            self.settings.TENANT_TABLE_NAME,
            self.settings.TENANT_TABLE_NAME,
        ]:
            if not self._check_table_exists(supabase, table_name):
                raise Exception(
                    f"Table {table_name} does not exist, please create the table first"
                )

    async def _get_paginated_data(
        self,
        tenant_id: str,
        table_name: str,
        model_class: T,
        page_params: PageParams,
    ) -> PageResponse[T]:
        query = self.supabase_client.table(table_name).select("*", count="exact")
        if page_params.eq_conditions:
            for field, value in page_params.eq_conditions.items():
                if field == "tenant_id" and value != tenant_id:
                    raise HTTPException(
                        status_code=status.HTTP_403_FORBIDDEN,
                        detail=f"Tenant {value} is not allowed to access this data.",
                    )
                if isinstance(value, BaseModel):
                    value = value.model_dump()
                    query.filter(field, "eq", json.dumps(value))
                    continue
                query = query.eq(field, value)

        if page_params.order_by:
            order_fields = page_params.order_by.split(",")
            for field in order_fields:
                field = field.strip()
                is_desc = page_params.order_direction.lower() == "desc"
                query = query.order(field, desc=is_desc)

        query = query.range(
            page_params.offset, page_params.offset + page_params.limit - 1
        )

        response = query.execute()
        data = response.data if response else []
        total = response.count if response else 0

        # Convert to a list of model objects
        items = [model_class(**item) for item in data]

        total_pages = (total + page_params.page_size - 1) // page_params.page_size

        return PageResponse[T](
            items=items,
            total=total,
            page=page_params.page,
            page_size=page_params.page_size,
            total_pages=total_pages,
        )

    # =============== knowledge ===============
    async def save_knowledge_list(
        self, knowledge_list: List[Knowledge]
    ) -> List[Knowledge]:
        knowledge_dicts = [
            knowledge.model_dump(exclude_unset=True) for knowledge in knowledge_list
        ]
        response = (
            self.supabase_client.table(self.settings.KNOWLEDGE_TABLE_NAME)
            .insert(knowledge_dicts)
            .execute()
        )
        return (
            [Knowledge(**knowledge) for knowledge in response.data]
            if response.data
            else []
        )

    async def get_knowledge_list(
        self, tenant_id: str, page_params: PageParams[Knowledge]
    ) -> PageResponse[Knowledge]:
        return await self._get_paginated_data(
            tenant_id, self.settings.KNOWLEDGE_TABLE_NAME, Knowledge, page_params
        )

    async def get_knowledge(self, tenant_id: str, knowledge_id: str) -> Knowledge:
        res = (
            self.supabase_client.table(self.settings.KNOWLEDGE_TABLE_NAME)
            .select("*")
            .eq("knowledge_id", knowledge_id)
            .eq("tenant_id", tenant_id)
            .execute()
        )
        return Knowledge(**res.data[0]) if res.data else None

    async def update_knowledge(self, knowledge: Knowledge):
        res = (
            self.supabase_client.table(self.settings.KNOWLEDGE_TABLE_NAME)
            .upsert(knowledge)
            .execute()
        )
        return [Knowledge(**knowledge) for knowledge in res.data] if res.data else []

    async def delete_knowledge(
        self, tenant_id: str, knowledge_id_list: List[str]
    ) -> List[Knowledge]:
        res = (
            self.supabase_client.table(self.settings.KNOWLEDGE_TABLE_NAME)
            .delete()
            .in_("knowledge_id", knowledge_id_list)
            .eq("tenant_id", tenant_id)
            .execute()
        )
        return [Knowledge(**knowledge) for knowledge in res.data] if res.data else []

    # =============== chunk ===============
    async def save_chunk_list(self, chunk_list: List[Chunk]):
        res = (
            self.supabase_client.table(self.settings.CHUNK_TABLE_NAME)
            .insert(
                [
                    chunk.model_dump(exclude_unset=True, exclude_none=True)
                    for chunk in chunk_list
                ]
            )
            .execute()
        )
        return [Chunk(**chunk) for chunk in res.data] if res.data else []

    async def get_chunk_list(
        self, tenant_id: str, page_params: PageParams[Chunk]
    ) -> PageResponse[Chunk]:
        return await self._get_paginated_data(
            tenant_id,
            self.settings.CHUNK_TABLE_NAME,
            Chunk,
            page_params,
        )

    async def get_chunk_by_id(self, tenant_id: str, chunk_id: str) -> Chunk:
        res = (
            self.supabase_client.table(self.settings.CHUNK_TABLE_NAME)
            .select("*")
            .eq("chunk_id", chunk_id)
            .eq("tenant_id", tenant_id)
            .execute()
        )
        return Chunk(**res.data[0]) if res.data else None

    # =============== task ===============
    async def save_task_list(self, task_list: List[Task]):
        res = (
            self.supabase_client.table(self.settings.TASK_TABLE_NAME)
            .insert(
                [
                    task.model_dump(exclude_unset=True, exclude_none=True)
                    for task in task_list
                ]
            )
            .execute()
        )
        return [Task(**task) for task in res.data] if res.data else []

    async def update_task_list(self, task_list: List[Task]) -> List[Task]:
        task_dicts = [
            task.model_dump(exclude_unset=True, exclude_none=True) for task in task_list
        ]
        res = (
            self.supabase_client.table(self.settings.TASK_TABLE_NAME)
            .upsert(task_dicts, on_conflict=["task_id"])
            .execute()
        )
        return [Task(**task) for task in res.data] if res.data else []

    async def get_task_list(
        self, tenant_id: str, page_params: PageParams[Task]
    ) -> PageResponse[Task]:
        return await self._get_paginated_data(
            tenant_id,
            self.settings.TASK_TABLE_NAME,
            Task,
            page_params,
        )

    async def get_task_by_id(self, tenant_id: str, task_id: str) -> Task | None:
        res = (
            self.supabase_client.table(self.settings.TASK_TABLE_NAME)
            .select("*")
            .eq("tenant_id", tenant_id)
            .eq("task_id", task_id)
            .execute()
        )
        return Task(**res.data[0]) if res.data else None

    # =============== tenant ===============
    async def save_tenant(self, tenant: Tenant) -> Tenant | None:
        self.logger.info(f"save tenant: {tenant.tenant_name}")
        res = (
            self.supabase_client.table(self.settings.TENANT_TABLE_NAME)
            .insert(tenant.model_dump(exclude_none=True))
            .execute()
        )
        if res.data[0] is None:
            return None
        tenant_data = res.data[0]
        tenant = Tenant(**tenant_data)
        return tenant

    async def get_tenant_by_sk(self, secret_key: str) -> Tenant | None:
        res = (
            self.supabase_client.table(self.settings.TENANT_TABLE_NAME)
            .select("*")
            .eq("secret_key", secret_key)
            .execute()
        )
        return Tenant(**res.data[0]) if res.data else None

    async def update_tenant(self, tenant: Tenant) -> Tenant:
        res = (
            self.supabase_client.table(self.settings.TENANT_TABLE_NAME)
            .upsert(tenant.model_dump(exclude_unset=True, exclude_none=True))
            .execute()
        )
        return Tenant(**res.data[0]) if res.data else None

    async def validate_tenant_name(self, tenant_name: str) -> bool:
        res = (
            self.supabase_client.table(self.settings.TENANT_TABLE_NAME)
            .select("tenant_name")
            .eq("tenant_name", tenant_name)
            .execute()
        )
        return not bool(res.data)

    # =============== retrieval ===============
    async def search_space_chunk_list(
        self,
        tenant_id: str,
        params: RetrievalBySpaceRequest,
    ) -> List[RetrievalChunk]:
        embedding_model = get_register(
            RegisterTypeEnum.EMBEDDING, params.embedding_model_name
        )
        # query_embedding = await embedding_model().embed_text(params.question)
        query_embedding = [
            0.006708201,
            -0.015125934,
            0.0049097743,
            -0.021512743,
            -0.0050396984,
            0.03632412,
            0.018681759,
            -0.026025906,
            -0.013539488,
            -0.025738705,
            0.022046117,
            0.011522242,
            -0.0045370962,
            -0.010154616,
            -0.00485165,
            0.016944876,
            0.010455494,
            -0.0024241155,
            0.008643391,
            0.008479276,
            0.005323481,
            0.001389849,
            -0.02776279,
            -0.0030070657,
            -0.014469474,
            -0.0025044635,
            0.024822395,
            -0.027120005,
            -0.0028908176,
            -0.0038259313,
            0.02345477,
            -0.007309956,
            -0.013895071,
            -0.010708504,
            0.0062261135,
            -0.0119872345,
            0.01896896,
            0.016274739,
            0.033178587,
            0.012288111,
            0.012390683,
            0.010209321,
            0.01754663,
            0.022251261,
            0.0010171712,
            0.026709719,
            -0.008363027,
            -0.037226755,
            0.0018018461,
            0.008301484,
            -0.011686357,
            0.006513315,
            0.002969456,
            0.0060141315,
            -0.007863845,
            0.011371803,
            -0.0043080193,
            0.008923754,
            -0.00059448957,
            -0.016794436,
            0.009621243,
            0.008663905,
            -0.036789116,
            -0.019037342,
            -0.006653496,
            -0.0053576715,
            0.01459256,
            0.008000607,
            -0.011371803,
            0.0125753125,
            0.021334952,
            0.022661548,
            0.021909354,
            -0.015700337,
            0.053528845,
            -0.005012346,
            0.006277399,
            0.02076055,
            -0.015536222,
            -0.016329443,
            0.014961818,
            -0.00926566,
            -0.006762906,
            0.037992626,
            0.0041062944,
            0.03588648,
            -0.009210955,
            0.02524636,
            -0.015549897,
            -0.0072757658,
            0.0025044635,
            0.012698399,
            0.017450897,
            0.022976102,
            0.008739124,
            0.022770958,
            -0.0012736009,
            0.015495192,
            -0.002914751,
            -0.03782851,
            0.0018582606,
            -0.006048322,
            -0.043764003,
            -0.01211032,
            -0.033917103,
            0.010893134,
            0.017232077,
            -0.0053713475,
            0.017710745,
            0.026313107,
            -0.03402651,
            0.02061011,
            0.018791169,
            -0.016821789,
            -0.012103482,
            -0.01769707,
            0.005720092,
            -0.036160007,
            -0.014879761,
            -0.008575009,
            0.018148385,
            0.02535577,
            0.01853132,
            0.022483757,
            0.006526991,
            0.013977129,
            -0.0068483828,
            0.0005602989,
            -0.0016796145,
            -0.024535194,
            0.0355309,
            -0.0011932529,
            0.0062397895,
            0.017177371,
            -0.040700525,
            0.026107963,
            -0.028802184,
            -0.002612164,
            -0.001703548,
            -0.038840555,
            0.006263723,
            0.01780648,
            -0.018298823,
            0.0026480642,
            -0.0067458106,
            0.00992212,
            -0.010209321,
            -0.023851382,
            0.018791169,
            0.026545603,
            0.0021796525,
            -0.027967934,
            -0.028200429,
            0.0010402498,
            -0.013765147,
            0.021758916,
            -0.0003513087,
            0.009402422,
            0.0030583516,
            0.0005094404,
            0.011747899,
            0.032494772,
            -0.0029814227,
            -0.01794324,
            0.0062876563,
            0.028665422,
            0.014469474,
            0.0116658425,
            0.0067902585,
            -0.01813471,
            -0.018011622,
            0.0129856,
            0.0024959159,
            0.0069475356,
            -0.010729019,
            -0.0010453784,
            -0.011098278,
            0.007036431,
            -0.03626942,
            -0.009833224,
            -0.017245753,
            -0.005665387,
            0.0128419995,
            0.018695435,
            0.0074535566,
            -0.015426811,
            0.0008415168,
            -0.018148385,
            0.002612164,
            9.108597e-06,
            0.017067961,
            0.039278194,
            0.008178398,
            -0.011180336,
            -0.6008798,
            -0.008041636,
            -0.004034494,
            -0.021362305,
            0.012554798,
            -0.008417732,
            -0.0072278986,
            0.012397521,
            -0.019105723,
            -0.030415982,
            -0.017984271,
            -0.010872619,
            -0.0046738586,
            -0.019283514,
            0.0032549477,
            -0.010995706,
            0.00959389,
            0.0013009533,
            0.010920486,
            0.002097595,
            0.0038977317,
            0.016917523,
            -0.022278612,
            0.0052653565,
            -5.219413e-05,
            -0.0075151,
            0.031564787,
            -0.010011015,
            0.012165025,
            0.01699958,
            -0.02400182,
            0.028774831,
            0.015317401,
            -0.016876495,
            0.054732356,
            -0.004154161,
            -0.008745963,
            0.024015497,
            0.01962542,
            0.041685212,
            -0.019666448,
            -0.018668083,
            0.017491926,
            0.01459256,
            -0.018763816,
            -0.005942331,
            0.030580098,
            -0.009696462,
            -0.024179611,
            0.012541122,
            0.006964631,
            -0.0031352805,
            -0.00791855,
            0.019803211,
            -0.0022856435,
            -0.029458646,
            0.029349234,
            -0.030744212,
            -0.022634195,
            0.0012684723,
            0.0033506816,
            0.007501424,
            -0.0019727992,
            -0.0194066,
            -0.007857006,
            0.017573982,
            -0.007508262,
            -0.013423241,
            0.008588686,
            -0.00083125965,
            0.0131633915,
            -0.008144207,
            -0.0024634348,
            0.003046385,
            0.00923147,
            0.029595407,
            0.024439462,
            -0.009361394,
            -0.008520304,
            -0.0006855221,
            0.015057553,
            -0.00948448,
            -0.0003010912,
            -0.006209018,
            0.008561334,
            0.004249895,
            -0.035284728,
            -0.021471715,
            0.035503548,
            -0.006533829,
            0.007576643,
            0.01317023,
            -0.0068723164,
            -0.0017420124,
            0.013546327,
            0.02783117,
            -0.021977736,
            0.00364814,
            -0.0065509244,
            -0.03356152,
            -0.004899517,
            0.0031865665,
            -0.0051969755,
            0.015960185,
            0.0355309,
            0.003261786,
            -0.028938947,
            -0.010653799,
            0.0101956455,
            -0.008048474,
            -0.010305055,
            -0.013053982,
            -0.006954374,
            -0.025725028,
            0.011385479,
            -0.039497014,
            0.0025489114,
            -0.016261062,
            0.011214525,
            0.005292709,
            -0.0013300154,
            0.01156327,
            0.022374347,
            -0.005053375,
            0.023646237,
            -0.0035147965,
            -0.022552138,
            -0.010783724,
            -0.02148539,
            0.026709719,
            0.0077612726,
            -0.01794324,
            0.006752649,
            -0.017738098,
            0.028282488,
            0.0069270213,
            0.04045435,
            0.0024087296,
            -0.009354556,
            0.0008616038,
            -0.0037301974,
            0.007139003,
            0.0073304707,
            0.0073441467,
            0.009628081,
            -0.02754397,
            -0.006762906,
            -0.0051559466,
            0.0026754166,
            0.01656194,
            -0.031838313,
            -0.025834437,
            0.014619912,
            0.035011202,
            0.0039114077,
            0.016616644,
            -0.008472438,
            -0.014660941,
            -0.026381489,
            -0.011652166,
            0.00058850617,
            0.026490899,
            -0.02520533,
            0.00817156,
            -0.031400673,
            -0.023085512,
            -0.0012094935,
            0.021430686,
            -0.015850775,
            -0.014113891,
            0.0008269858,
            -0.0042840857,
            -0.021553772,
            0.00070432696,
            0.015071229,
            0.026572956,
            -0.038430266,
            -0.0036789116,
            -0.017628688,
            -0.01382669,
            0.0071595176,
            0.01025035,
            -0.0021471714,
            0.0014214753,
            0.012048777,
            0.016767085,
            0.020281881,
            0.032713592,
            -0.0068483828,
            0.005077308,
            -0.0075151,
            0.029458646,
            -0.011289746,
            0.009785358,
            -0.011836795,
            0.026148992,
            0.010093073,
            -0.009101545,
            0.005658549,
            0.014182272,
            -0.0007774094,
            0.034819737,
            -0.0018616797,
            -0.005299547,
            -0.023153894,
            -0.01265737,
            0.0002218117,
            -0.0019710897,
            0.01689017,
            0.0058465973,
            0.02002203,
            0.017888537,
            -0.008698096,
            -0.021854648,
            0.004896098,
            0.0172184,
            0.0029318463,
            -0.0025027539,
            -0.015276372,
            -0.00915625,
            -0.009655434,
            0.0076518627,
            -0.009840063,
            0.0063594566,
            -0.0019009989,
            0.025383122,
            -0.00364814,
            0.025834437,
            0.004472134,
            -0.0111051155,
            -0.023482123,
            0.0027489264,
            0.0180253,
            0.0017266267,
            -0.019721154,
            -0.009210955,
            0.02334536,
            -0.028008962,
            0.028610718,
            0.0006607339,
            -0.0019984422,
            0.00718687,
            0.005408957,
            -0.014195949,
            0.021334952,
            0.018627053,
            0.030552745,
            0.031072443,
            -0.017683392,
            0.022716252,
            -0.020596433,
            0.025615618,
            -0.018627053,
            0.004783269,
            0.03561296,
            -0.0035831777,
            -0.014660941,
            0.004260152,
            0.015016524,
            0.022278612,
            -0.006585115,
            0.009723814,
            0.016548263,
            -0.0021317857,
            0.0071595176,
            -0.023591533,
            -0.00021721733,
            -0.03397181,
            0.0055662342,
            -0.021184513,
            0.004896098,
            -0.023577858,
            0.011583785,
            -0.024562547,
            0.008814344,
            -0.014469474,
            0.0017368839,
            0.021690534,
            -0.01167268,
            0.018148385,
            -0.028391898,
            -0.011884662,
            0.007289442,
            0.017970594,
            0.00054705003,
            -0.031646844,
            -0.0289663,
            0.020145118,
            -0.011829957,
            -0.011631652,
            -0.0051012416,
            0.0035660826,
            -0.0053816047,
            0.0020514377,
            -0.017054286,
            -0.0048106215,
            0.021977736,
            -0.0050978228,
            -0.026983242,
            -0.0036310446,
            0.016370473,
            0.010640123,
            -0.022770958,
            -0.025766058,
            0.013847204,
            -0.015344754,
            -0.035804424,
            -0.02732515,
            0.009169926,
            -0.0070501072,
            -0.014948143,
            -0.010305055,
            -0.010346084,
            -0.022661548,
            0.00075475813,
            0.0055764914,
            -0.008328837,
            -0.021731563,
            0.049726848,
            0.010147778,
            -0.0180253,
            0.006222694,
            -0.019092046,
            -0.005976522,
            0.03331535,
            0.032604184,
            0.008267294,
            0.00237112,
            -0.016589293,
            -0.01131026,
            -0.019023666,
            -0.017560307,
            -0.004687535,
            -0.011447022,
            -0.014195949,
            0.0063560377,
            0.013375374,
            -0.0070022405,
            0.02531474,
            0.014401092,
            0.000612867,
            -0.022305965,
            0.0042704092,
            0.0009761424,
            0.01349846,
            -0.011741062,
            0.017081637,
            0.016384149,
            0.001298389,
            0.020350263,
            0.016903846,
            0.026805453,
            0.008144207,
            -0.02907571,
            0.02448049,
            0.00072612346,
            0.011337612,
            0.012664208,
            -0.0054739197,
            0.010831591,
            -0.025519885,
            0.043052837,
            0.01999468,
            0.01327964,
            0.020336585,
            0.048714805,
            -0.0018223604,
            -0.033424757,
            -0.00089835876,
            0.009463966,
            0.014797703,
            0.0059799408,
            0.008875887,
            -0.004872164,
            0.011720547,
            0.018873226,
            -0.03257683,
            -0.00070389954,
            0.0071595176,
            0.028446602,
            0.011098278,
            -0.009169926,
            0.015290049,
            -0.05935493,
            -0.005549139,
            -0.01586445,
            -0.019488657,
            -0.015098581,
            -0.002207005,
            -0.009675948,
            -0.016397825,
            -0.003323329,
            -0.0322486,
            0.010510199,
            -0.006479124,
            -0.032658886,
            -0.014168596,
            -0.012308626,
            0.007480909,
            0.010421303,
            0.017300457,
            -0.01317023,
            -0.0019574135,
            0.037199404,
            0.008363027,
            -0.023249626,
            0.008410894,
            -0.035968542,
            -0.0021163998,
            -0.009723814,
            -0.0048755836,
            0.008889563,
            0.002232648,
            -0.008732286,
            0.016903846,
            0.0077749486,
            0.015454164,
            0.015878128,
            -0.0051354324,
            0.0025130112,
            -0.0056893206,
            0.0060175504,
            -0.008643391,
            -0.01783383,
            0.0051012416,
            -0.04636249,
            -0.0009975116,
            -0.01769707,
            0.00054534053,
            0.006961212,
            0.029814227,
            0.006923602,
            -0.0371447,
            -0.0063252663,
            0.01885955,
            -0.016370473,
            0.012582151,
            -3.4297474e-05,
            0.033069175,
            0.012288111,
            0.0076655387,
            0.0068894117,
            0.005610682,
            -0.0036207875,
            -0.025697676,
            -0.023482123,
            0.021868326,
            0.039524365,
            -0.007863845,
            0.029239824,
            -0.021745238,
            0.028993653,
            -0.008964783,
            0.021950383,
            0.013293316,
            0.015809746,
            -0.0005957717,
            -0.015454164,
            -0.042834017,
            -0.035941187,
            -0.007993769,
            0.007802301,
            0.01605592,
            -0.030634802,
            -0.042615198,
            -0.016767085,
            -0.013423241,
            0.003396839,
            0.0104623325,
            -0.03487444,
            -0.019051017,
            0.00078852137,
            0.007309956,
            0.029376587,
            0.0017274815,
            0.02863807,
            -0.0043387907,
            -0.010585418,
            -0.021758916,
            -0.03290506,
            0.006099608,
            -0.0037814835,
            0.02575238,
            0.0027078977,
            0.038867906,
            0.011953044,
            0.015823422,
            -0.0040413323,
            -0.008144207,
            0.006215856,
            -0.011187173,
            0.0034857346,
            0.008814344,
            0.027790142,
            0.0067013633,
            0.040618464,
            0.0017411577,
            -0.0042977617,
            -0.006513315,
            -0.017902212,
            -0.011850472,
            -0.01995365,
            -0.009723814,
            -0.07160885,
            -0.024754014,
            0.0038567027,
            -0.00342932,
            0.023728296,
            -0.026217373,
            -0.0052209087,
            0.009108383,
            -0.0050157653,
            0.04132963,
            0.012035101,
            0.01875014,
            0.008766477,
            0.004738821,
            -0.00787752,
            0.013744633,
            -0.00740569,
            -0.0087801535,
            -0.021772591,
            0.0014137825,
            0.042806666,
            0.023441095,
            0.009894768,
            0.0031677617,
            0.000912035,
            -0.01010675,
            0.015741365,
            -0.0152216675,
            -0.01678076,
            -0.006971469,
            -0.013553165,
            -0.00074877474,
            -0.021731563,
            -0.0062397895,
            -0.027024273,
            -0.019160427,
            0.006157732,
            -0.013997643,
            0.014059186,
            -0.02192303,
            -0.02137598,
            -0.006762906,
            -0.0028395315,
            0.02214185,
            0.028583365,
            0.040372293,
            0.044967514,
            0.004154161,
            -0.0073441467,
            -0.047183067,
            -0.0043422095,
            -0.028255135,
            0.015960185,
            0.033397406,
            -0.029568056,
            -0.005439729,
            0.039715834,
            0.016726054,
            -0.0055799102,
            -0.0029369749,
            0.013778823,
            0.039168783,
            0.0245899,
            -0.038266152,
            -0.02301713,
            0.004034494,
            0.01141967,
            -0.024179611,
            -0.011228202,
            -0.02411123,
            4.060137e-05,
            -0.022962425,
            0.013252287,
            0.008212589,
            0.00023506056,
            0.018093681,
            0.0042977617,
            0.011829957,
            0.0034259008,
            0.013047144,
            0.012930895,
            0.01360787,
            0.0150302,
            -0.013238611,
            0.013450593,
            0.0081920745,
            0.029321883,
            -0.02327698,
            -0.008896401,
            -0.008363027,
            0.053282674,
            0.016288415,
            -0.017929565,
            0.0021437523,
            0.0017864603,
            0.03626942,
            -0.003545568,
            0.00021732418,
            -0.012595828,
            -0.017204724,
            -0.012889867,
            0.027174711,
            -0.0012727461,
            0.005162785,
            0.009320365,
            -0.002641226,
            -0.0007500569,
            -0.0090741925,
            -0.007836492,
            0.0014890018,
            0.0070637837,
            -0.0114265075,
            0.0069954023,
            -0.021553772,
            -0.0036242066,
            0.0052003944,
            -0.0036344638,
            -0.00035237716,
            0.022921396,
            -0.014838733,
            0.02082893,
            0.007768111,
            0.011727385,
            -0.042040795,
            0.022114499,
            -0.009532347,
            -0.0005265357,
            0.009559699,
            -0.017245753,
            -0.022688901,
            -0.016001213,
            -0.013313831,
            0.006157732,
            0.0023523152,
            0.016042242,
            0.042232264,
            0.0026805452,
            0.0067765824,
            -0.0104623325,
            -0.00926566,
            0.015262696,
            -0.02104775,
            0.009060516,
            0.0055252053,
            -0.016903846,
            0.015536222,
            -0.033287995,
            0.012158187,
            0.010482847,
            -0.03531208,
            -0.056619678,
            0.008841696,
            -0.0065201526,
            -0.009176765,
            -0.018777493,
            -0.036378827,
            -0.031345967,
            -0.022647873,
            0.010175131,
            0.010414465,
            0.018080004,
            0.034491505,
            0.0010205902,
            0.0001432801,
            -0.0007752725,
            0.0028737222,
            -0.009450289,
            -0.016726054,
            -0.008055312,
            -0.03465562,
            -0.017382516,
            -0.017450897,
            0.016425177,
            0.018066328,
            -0.023783,
            -0.015043876,
            -0.008130531,
            -0.037418224,
            -0.03257683,
            -0.023974469,
            0.013183906,
            -0.011330774,
            0.006061998,
            0.0067321346,
            0.0020001517,
            -0.016466206,
            0.017929565,
            -0.022606842,
            -0.013908748,
            -0.018955285,
            -0.008328837,
            -0.0047114687,
            -0.01470197,
            -0.03840291,
            -0.015016524,
            -0.003359229,
            -0.005932074,
            -0.021882001,
            0.05052007,
            -0.017847508,
            -0.0051422706,
            -0.006609048,
            -0.0041028755,
            -0.025437826,
            0.0040652654,
            0.012787295,
            -0.019051017,
            -0.01524902,
            0.026873833,
            -0.003702845,
            -0.00042225426,
            0.014852408,
            0.013532651,
            -0.01794324,
            -0.0006863769,
            -0.006523572,
            -0.008048474,
            -0.01459256,
            -0.0041165515,
            -0.0057029966,
            0.00073552586,
            -0.0066227247,
            0.03498385,
            -0.010660638,
            -0.0005209797,
            -0.014647265,
            0.0069372784,
            -0.011057249,
            0.0065064766,
            0.030662155,
            -0.022442728,
            0.018736465,
            0.007768111,
            0.01678076,
            -0.018722787,
            -0.017341487,
            -0.016903846,
            -0.011194011,
            -0.03082627,
            -0.008684419,
            0.033096526,
            -0.007932225,
            -0.02623105,
            0.005610682,
            -0.004526839,
            -0.0058739497,
            -0.01645253,
            -0.0066911057,
            -0.0031147662,
            -0.021758916,
            0.004140485,
            -0.013744633,
            -0.02242905,
            -0.011836795,
            0.02655928,
            -0.0014932756,
            0.005043118,
            0.2908118,
            -0.018038975,
            0.009696462,
            0.0027437978,
            -0.0024651443,
            0.002483949,
            0.01772442,
            0.027051624,
            -0.01586445,
            0.016397825,
            -0.0055935867,
            -0.00019745088,
            -0.0042840857,
            -0.0096896235,
            0.015522545,
            -0.010975191,
            -0.022319641,
            -0.03181096,
            -0.006099608,
            -0.024904454,
            0.014619912,
            0.0023916345,
            0.0015129353,
            -0.026504574,
            0.01152908,
            0.011953044,
            -0.0073988517,
            -0.0047593354,
            0.016685026,
            0.012636856,
            -0.022169203,
            0.021799944,
            0.005665387,
            0.021512743,
            -0.0005372202,
            -0.027844848,
            0.0014462635,
            -0.0039353413,
            0.028282488,
            0.019242486,
            -0.0019967325,
            -0.0086092,
            0.0069577927,
            -0.0097033,
            0.0111051155,
            0.013122363,
            -0.0010282831,
            -0.019310867,
            0.005173042,
            0.018927932,
            -0.01564563,
            0.015303725,
            0.03082627,
            0.0049302885,
            -0.03312388,
            0.0014001062,
            0.0018975799,
            0.010975191,
            0.02294875,
            0.027584998,
            -0.0027078977,
            0.038238797,
            0.009245146,
            0.007966416,
            -0.03834821,
            0.0141002145,
            -0.024015497,
            -0.019174105,
            0.027078977,
            -0.024795042,
            -0.0025677162,
            -0.016220033,
            0.015125934,
            0.014797703,
            -0.03082627,
            -0.04277931,
            0.007672377,
            0.01820309,
            0.016206358,
            0.036542945,
            0.0038908934,
            0.0024959159,
            -0.00397637,
            -0.0128967045,
            -0.0031386996,
            -0.01623371,
            0.010387112,
            -0.011754738,
            -0.019201456,
            -0.010612771,
            -0.0050055077,
            -0.032440066,
            -0.004899517,
            0.014961818,
            -0.0046704398,
            0.012787295,
            0.018408233,
            0.0032891384,
            -0.016479883,
            0.008274131,
            -0.02071952,
            0.04852334,
            0.018121032,
            0.009033164,
            -0.02214185,
            0.0063560377,
            0.0048790025,
            0.0038977317,
            -0.0041028755,
            0.0007474926,
            -0.027270444,
            -0.013676251,
            0.0037199403,
            -0.014496827,
            0.0029301369,
            -0.008342513,
            0.009293012,
            -0.0013265964,
            0.019051017,
            0.01229495,
            0.0073988517,
            -0.01594651,
            0.0026326783,
            0.017450897,
            -0.013348021,
            -0.009409261,
            -0.0036652354,
            -0.011747899,
            0.00031327162,
            -0.009306689,
            0.01787486,
            -0.013272801,
            0.023386389,
            -0.018832197,
            -0.018490292,
            0.025287388,
            0.02973217,
            0.001481309,
            -0.012609503,
            -0.0007573224,
            -0.013375374,
            -0.0267781,
            0.017628688,
            -0.005118337,
            0.0016368763,
            0.0041780947,
            0.0058329212,
            0.0033284577,
            0.025369445,
            -0.029130414,
            -0.038019978,
            -0.0057884734,
            -0.008472438,
            -0.005077308,
            0.013566841,
            0.009867415,
            -0.016192682,
            -0.021649506,
            0.024617253,
            0.01218554,
            -0.060066096,
            -0.031181853,
            0.017314134,
            0.0046054777,
            -0.018873226,
            -0.033616226,
            -0.17483719,
            0.016767085,
            0.028993653,
            -0.024986511,
            0.021020398,
            0.014291682,
            -0.0024531775,
            -0.0011898339,
            -0.0012325721,
            -0.022388022,
            0.027694408,
            -0.023783,
            -0.012356493,
            -0.024535194,
            0.012903543,
            0.00817156,
            -0.019064695,
            0.009094707,
            0.03375299,
            0.006544086,
            0.022388022,
            -0.024726663,
            -0.027530294,
            0.01783383,
            0.03093568,
            0.016862817,
            -0.008848535,
            0.005125175,
            -0.027858524,
            -0.049015682,
            -0.020528052,
            -0.024042848,
            0.016083272,
            0.016767085,
            0.011617975,
            0.008404057,
            0.013019791,
            -0.0042669903,
            -0.021526419,
            0.020774225,
            0.029321883,
            0.041603155,
            0.01564563,
            0.03922349,
            -0.012500093,
            0.017710745,
            0.023413742,
            -0.013785661,
            0.0205007,
            0.003535311,
            -0.00030429658,
            -0.02065114,
            0.045323096,
            0.005795311,
            0.01907837,
            0.021827297,
            -0.006920183,
            0.008082665,
            0.015768718,
            -0.0014505374,
            0.010154616,
            -0.003068609,
            0.03148273,
            -0.0015231925,
            -0.013929262,
            -0.00045131627,
            0.00017768441,
            0.032275952,
            -0.003907989,
            0.010441817,
            -0.0030891232,
            -0.011447022,
            -0.0002886971,
            0.0011248717,
            0.026983242,
            0.017150018,
            -0.04220491,
            0.0017138052,
            0.0060175504,
            -0.010592257,
            0.0026104543,
            0.0076518627,
            -0.013683089,
            0.0061953417,
            -0.015426811,
            0.019543363,
            0.019981002,
            -0.0066911057,
            0.008595523,
            -0.005706416,
            0.014729323,
            -0.01397029,
            -0.015700337,
            -0.0141002145,
            -0.0054568243,
            0.0018873226,
            0.022593167,
            -0.0022292288,
            -0.0114265075,
            -0.0013684799,
            0.00912206,
            -0.029759523,
            -0.0039455984,
            0.020555405,
            0.01732781,
            0.0044994866,
            -0.012445388,
            -0.004636249,
            0.024863424,
            -0.01098203,
            -0.0361053,
            0.020158794,
            0.017136343,
            0.016589293,
            0.0076039955,
            0.0071526794,
            -0.00912206,
            -0.019433953,
            0.01167268,
            -0.0071663554,
            -0.005484177,
            -0.015631955,
            0.02973217,
            0.022634195,
            -0.0051525277,
            -0.010045206,
            -0.06291076,
            -0.01824412,
            0.00798693,
            0.027584998,
            0.00013729674,
            0.007200546,
            -0.0067287157,
            0.0317289,
            -0.0030651898,
            0.023646237,
            -0.01546784,
            -0.011139306,
            -0.014524179,
            -0.0011983815,
            0.003316491,
            -0.01820309,
            0.006373133,
            -0.013669413,
            0.0029318463,
            0.0058978833,
            -0.020459672,
            -0.027311474,
            0.018476615,
            -0.007939064,
            -0.026381489,
            0.015385782,
            -0.033835046,
            0.0048448117,
            0.010400789,
            0.005569653,
            0.036898524,
            -0.014866085,
            -0.009381908,
            -0.029759523,
            -0.0032874288,
            -0.0074945856,
            -0.025082244,
            0.009115221,
            0.03583178,
            -0.020158794,
            4.241775e-05,
            -0.018093681,
            0.01623371,
            -0.012582151,
            -0.012992439,
            -0.005555977,
            -0.013149715,
            0.045350447,
            0.0073851757,
            -0.016575616,
            -0.015344754,
            -0.0172184,
            -0.02973217,
            -0.0073304707,
            0.051969755,
            0.006537248,
            -0.012650533,
            0.0105443895,
            -0.018736465,
            -0.028884241,
            0.008663905,
            -0.028884241,
            -0.025697676,
            0.016903846,
            0.009737491,
            0.01816206,
            0.008397218,
            0.0006692815,
            -0.003484025,
            -0.016274739,
            -0.012883029,
            0.023960792,
            -0.017779127,
            -0.0011069216,
            -0.038266152,
            -0.026791776,
            0.0023779583,
            -0.027967934,
            0.027133683,
            -0.0071184887,
            0.000673128,
            -0.015112258,
            -0.018886903,
            -0.007480909,
            -0.0020804997,
            0.014866085,
            0.0012667627,
            0.015549897,
            -0.00948448,
            -0.038758494,
            -0.017956918,
            -0.008602362,
            0.010640123,
            0.0057679587,
            -0.00182407,
            -0.013676251,
            -0.0011923981,
            -0.012883029,
            -0.012267597,
            0.034600914,
            -0.0134847835,
            -0.03367093,
            -0.09666374,
            0.01853132,
            -0.0151943145,
            -0.00021102028,
            0.01178209,
            -0.013334345,
            0.030087752,
            -0.014182272,
            0.0016240549,
            -0.0061132843,
            -0.008383542,
            -0.015604602,
            -0.0028771413,
            0.0042635715,
            0.010790562,
            -0.012233406,
            0.007815978,
            0.004947384,
            -0.0014625042,
            0.0025078827,
            0.01010675,
            -0.0051456895,
            0.00069150544,
            -0.0032634954,
            -0.016425177,
            0.02283934,
            -0.018832197,
            0.013778823,
            -0.009518671,
            -0.0007205675,
            0.012561637,
            -0.0072073843,
            0.006150894,
            0.021006722,
            0.011980396,
            -0.019064695,
            0.027776467,
            0.03312388,
            0.029431293,
            0.004294343,
            -0.027202064,
            -0.02312654,
            0.012151349,
            -0.029786875,
            -0.035339434,
            -0.009409261,
            -0.010934163,
            0.009306689,
            0.023550505,
            -0.0029591988,
            0.033287995,
            0.004465296,
            -0.03903202,
            0.0035592443,
            -0.011576947,
            -0.042806666,
            0.033643577,
            0.012144511,
            0.0002547202,
            0.009744328,
            0.010099911,
            0.009792196,
            0.0046088966,
            -0.012301788,
            -0.009853739,
            0.00849979,
            -0.012219731,
            -0.019146752,
            0.02608061,
            -0.0068825735,
            -0.026436193,
            -0.014893438,
            -0.011912014,
            -0.008985297,
            -0.009142574,
            0.020254528,
            -0.012151349,
            -0.0077749486,
            -0.030115105,
            0.05440413,
            0.018066328,
            0.0026224211,
            -0.010633285,
            0.002458306,
            0.017847508,
            0.051778287,
            -0.015768718,
            -0.011139306,
            -0.008547657,
            0.011405993,
            -0.0040037227,
            0.014510502,
            -0.027256768,
            0.01988527,
            0.018011622,
            0.0031506664,
            0.00039404698,
            0.013436916,
            0.00474224,
            0.01597386,
            0.029321883,
            0.009792196,
            -0.010927324,
            8.243146e-05,
            -0.032440066,
            -0.008144207,
            -0.030552745,
            -0.016767085,
            0.002892527,
            0.010476008,
            -0.010783724,
            -0.010243512,
            0.0008017702,
            0.017888537,
            -0.031017737,
            0.028118372,
            0.00886221,
            0.006704782,
            -0.026764423,
            0.011282907,
            0.01535843,
            0.0085408185,
            0.013997643,
            -0.016958551,
            0.017628688,
            0.022196556,
            -0.008246779,
            -0.03380769,
            6.629776e-05,
            0.0043934956,
            -0.029485997,
            -0.014975495,
            -0.014838733,
            -0.019611744,
            -0.013156554,
            0.012062454,
            -0.025219006,
            -0.0066808485,
            -0.0011505146,
            0.058424946,
            0.014825056,
            0.008951106,
            0.0040960372,
            -0.003191695,
            -0.03268624,
            0.011228202,
            0.024945483,
            -0.0053508333,
            -0.010872619,
            -0.0034429962,
            -0.0029386845,
            -0.013088172,
            -0.0076587005,
            -0.012671047,
            0.0021215284,
            -0.0073646614,
            0.0151669625,
            0.007460395,
            0.010886296,
            0.03151008,
            0.0131633915,
            -0.003123314,
            0.016110623,
            -0.04089199,
            0.002911332,
            0.025998553,
            0.032850355,
            -0.019379247,
            -0.042998135,
            0.023728296,
            0.00047183066,
            -0.025697676,
            -0.015413135,
            -0.007289442,
            -0.00085305615,
            -0.004902936,
            0.004530258,
            0.024630928,
            0.0010770048,
            -0.009846901,
            -0.014455797,
            -0.027516617,
            -0.03564031,
            0.008410894,
            0.0028292744,
            -0.00310109,
            1.1359035e-05,
            -0.014838733,
        ]
        res = self.supabase_client.rpc(
            "search_space_list_chunk",
            {
                "metadata_filter": params.metadata_filter,
                "query_embedding": query_embedding,
                "query_embedding_model_name": params.embedding_model_name,
                "space_id_list": params.space_id_list,
                "similarity_threshold": params.similarity_threshold,
                "top": params.top,
                "query_tenant_id": tenant_id,
            },
        ).execute()
        return [RetrievalChunk(**item) for item in res.data] if res.data else []

    async def search_knowledge_chunk_list(
        self,
        tenant_id: str,
        params: RetrievalByKnowledgeRequest,
    ) -> List[RetrievalChunk]:
        EmbeddingCls = get_register(
            RegisterTypeEnum.EMBEDDING, params.embedding_model_name
        )
        embedding_instance = EmbeddingCls()
        query_embedding = await embedding_instance.embed_text(params.question)
        res = self.supabase_client.rpc(
            "search_knowledge_list_chunk",
            {
                "metadata_filter": params.metadata_filter,
                "query_embedding": query_embedding,
                "query_embedding_model_name": params.embedding_model_name,
                "knowledge_id_list": params.knowledge_id_list,
                "similarity_threshold": params.similarity_threshold,
                "top": params.top,
                "tenant_id": tenant_id,
            },
        ).execute()
        return [RetrievalChunk(**item) for item in res.data] if res.data else []
